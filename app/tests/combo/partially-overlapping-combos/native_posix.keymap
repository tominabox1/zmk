#include <dt-bindings/zmk/keys.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/kscan-mock.h>

/ {
	behaviors {
		combo_one {
			compatible = "zmk,behavior-combo";
			label = "COMBO_ONE";
			timeout-ms = <30>;
			key-positions = <0 1>;
			bindings = <&kp X>;
		};
		
		combo_two {
			compatible = "zmk,behavior-combo";
			label = "COMBO_TWO";
			timeout-ms = <30>;
			key-positions = <0 2>;
			bindings = <&kp Y>;
		};

		combo_three {
			compatible = "zmk,behavior-combo";
			label = "COMBO_TWO";
			timeout-ms = <30>;
			key-positions = <3>;
			bindings = <&kp Z>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		label ="Default keymap";

		default_layer {
			bindings = <
				&kp A &kp B
				&kp C &none
			>;
		};
	};
};

&kscan {
	events = <
		/* all permutations of combo one press and release */
		ZMK_MOCK_PRESS(0,0,10) 
		ZMK_MOCK_PRESS(0,1,10) 
		ZMK_MOCK_RELEASE(0,0,10) 
		ZMK_MOCK_RELEASE(0,1,10)

		ZMK_MOCK_PRESS(0,1,10) 
		ZMK_MOCK_PRESS(0,0,10) 
		ZMK_MOCK_RELEASE(0,1,10)
		ZMK_MOCK_RELEASE(0,0,10) 

		ZMK_MOCK_PRESS(0,1,10) 
		ZMK_MOCK_PRESS(0,0,10) 
		ZMK_MOCK_RELEASE(0,0,10) 
		ZMK_MOCK_RELEASE(0,1,10)

		ZMK_MOCK_PRESS(0,0,10)  
		ZMK_MOCK_PRESS(0,1,10) 
		ZMK_MOCK_RELEASE(0,1,10)
		ZMK_MOCK_RELEASE(0,0,10)

		/* all permutations of combo two press and release */
		ZMK_MOCK_PRESS(0,0,10) 
		ZMK_MOCK_PRESS(0,2,10) 
		ZMK_MOCK_RELEASE(0,0,10) 
		ZMK_MOCK_RELEASE(0,2,10)

		ZMK_MOCK_PRESS(0,2,10) 
		ZMK_MOCK_PRESS(0,0,10) 
		ZMK_MOCK_RELEASE(0,2,10)
		ZMK_MOCK_RELEASE(0,0,10) 

		ZMK_MOCK_PRESS(0,2,10) 
		ZMK_MOCK_PRESS(0,0,10) 
		ZMK_MOCK_RELEASE(0,0,10) 
		ZMK_MOCK_RELEASE(0,2,10)

		ZMK_MOCK_PRESS(0,0,10)  
		ZMK_MOCK_PRESS(0,2,10) 
		ZMK_MOCK_RELEASE(0,2,10)
		ZMK_MOCK_RELEASE(0,0,10)
	>;
};
