#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NUM_SYM 1
#define NAV     2

/ {
	behaviors {
		rst: behavior_tap_hold1 {
			compatible = "zmk,behavior-tap-hold";
			label = "Bootloader Tap - Reset Hold";
			#binding-cells = <0>;
			hold_ms = <200>;
			bindings = <&bootloader>, <&reset>, <&kp BKSP>;
        };

        num_spc: behavior_tap_hold2 {
			compatible = "zmk,behavior-tap-hold";
			label = "Space Tap - Num/Sym Hold";
			#binding-cells = <0>;
			hold_ms = <200>;
			bindings = <&kp SPC>, <&mo NUM_SYM>, <&kp BKSP>;
        };

        ent_nav: behavior_tap_hold{
			compatible = "zmk,behavior-tap-hold";
			label = "Return Tap - Nav Hold";
			#binding-cells = <0>;
			hold_ms = <200>;
			bindings = <&kp RET>, <&mo NAV>, <&kp BKSP>;
        };

        a_gui: behavior_tap_hold3 {
			compatible = "zmk,behavior-tap-hold";
			label = "A tap, GUI hold";
			#binding-cells = <0>;
			hold_ms = <200>;
			bindings = <&kp A>, <&kp LGUI>, <&kp BKSP>;
	    	};

        r_alt: behavior_tap_hold4 {
			compatible = "zmk,behavior-tap-hold";
			label = "R tap, Alt Hold";
			#binding-cells = <0>;
			hold_ms = <150>;
			bindings = <&kp R>, <&kp LALT>, <&kp BKSP>;
	    	};

        s_ctrl: behavior_tap_hold5 {
			compatible = "zmk,behavior-tap-hold";
			label = "S tap, Ctrl Hold";
			#binding-cells = <0>;
			hold_ms = <150>;
			bindings = <&kp S>, <&kp LCTL>, <&kp BKSP>;
	    	};

        t_shift: behavior_tap_hold6 {
			compatible = "zmk,behavior-tap-hold";
			label = "T tap, Shift hold";
			#binding-cells = <0>;
			hold_ms = <150>;
			bindings = <&kp T>, <&kp LSFT>, <&kp BKSP>;
	    	};

        n_shift: behavior_tap_hold7 {
			compatible = "zmk,behavior-tap-hold";
			label = "N tap, Shift hold";
			#binding-cells = <0>;
			hold_ms = <150>;
			bindings = <&kp N>, <&kp RSFT>, <&kp BKSP>;
	    	};

        e_ctrl: behavior_tap_hold8 {
			compatible = "zmk,behavior-tap-hold";
			label = "E tap, Ctrl hold";
			#binding-cells = <0>;
			hold_ms = <150>;
			bindings = <&kp E>, <&kp RCTL>, <&kp BKSP>;
	    	};

        i_alt: behavior_tap_hold9 {
			compatible = "zmk,behavior-tap-hold";
			label = "I tap, ALT hold";
			#binding-cells = <0>;
			hold_ms = <150>;
			bindings = <&kp I>, <&kp RALT>, <&kp BKSP>;
	    	};
            
        o_gui: behavior_tap_hold10 {
			compatible = "zmk,behavior-tap-hold";
			label = "O tap, GUI hold";
			#binding-cells = <0>;
			hold_ms = <200>;
			bindings = <&kp O>, <&kp RGUI>, <&kp BKSP>;
	    	};
    	};
    };
 
/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp Q &kp W &kp F &kp P &kp G &kp J &kp L &kp U &kp Y &kp QUOT    
    &a_gui &r_alt &s_ctrl &t_shift &kp D &kp H &n_shift &e_ctrl &i_alt &o_gui
    &kp Z &kp X &kp C &kp V &kp B &kp K &kp M &kp CMMA &kp DOT
    &kp LGUI &kp CLCK &kp TAB &ent_nav &num_spc &kp RET &mo NUM_SYM &kp FSLH
            >;
        };
        num_sym {
            bindings = <
    &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5 &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0    
    &trans &trans &trans &trans &trans &trans &trans &trans &kp EQL &kp MINUS       
    &kp DEL &none &none &none &none &none &none &none &kp DOT
    &rst &none &none &trans &trans &kp RET &trans &kp FSLH
            >;
        };

    nav {
            bindings = <
    &none &none &none &none &none &none &none &kp UARW &none &kp BKSP    
    &trans &trans &trans &trans &none &none &kp LARW &kp DARW &kp RARW &none       
    &none &none &none &none &none &none &none &none &none
    &rgb_ug RGB_TOG &rgb_ug RGB_EFF &none &trans &trans &kp RET &trans &kp FSLH
            >;
        };
    };
};  